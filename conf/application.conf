play.http.secret.key = "123456789"
play.i18n {
  langs = [ "en" ]
}


# Fix error:
play.filters.headers {
  # Refused to apply inline style because it violates the following Content Security Policy directive: "style-src 'self'
  contentSecurityPolicy = "style-src 'self' 'unsafe-inline';"
  # The X-Frame-Options header. If null, the header is not set.
  frameOptions = "ALLOW"
}

###session timeout is 24 hours (86400000 Milliseconds)
play.http.session.maxAge=86400000

play.filters.hosts {
  allowed = ["."]
}

play.db {
}

## JDBC Datasource
# https://www.playframework.com/documentation/latest/JavaDatabase
# https://www.playframework.com/documentation/latest/ScalaDatabase
# ~~~~~
# Once JDBC datasource is set up, you can work with several different
# database options:
#
# Slick (Scala preferred option): https://www.playframework.com/documentation/latest/PlaySlick
# JPA (Java preferred option): https://playframework.com/documentation/latest/JavaJPA
# EBean: https://playframework.com/documentation/latest/JavaEbean
# Anorm: https://www.playframework.com/documentation/latest/ScalaAnorm
#
db {
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`

  # https://www.playframework.com/documentation/latest/Developing-with-the-H2-Database
  #default.driver = org.h2.Driver
  #default.url = "jdbc:h2:mem:play"
  #default.username = sa
  #default.password = ""

  # You can turn on SQL logging for any datasource
  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements
  #default.logSql=true
}

proxy {
  host = 210.245.31.16
  port = 80
}

play {
  modules {
    enabled += modules.SecurityModule
  }
}
play.http.errorHandler = "handles.ErrorHandle"

baseUrl = "http://localhost:9000"
oidc.discoveryUri = "https://dev-136838.okta.com/oauth2/default/.well-known/openid-configuration"
oidc.clientId = "0oa2cii0lqE2bknvn357"
oidc.clientSecret = "P-rsmEjeNhfCLXzhQILNQtm_J3kkwcr9fMj02VUQ"

storage="/home/hoangnh44/output"

